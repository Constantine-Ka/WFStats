const   express     	= require("./web/app");
const	Discord			= require("discord.js");
const	config			= require("./config.json");
const 	vrbl			= require('./variable.json');
const   client      	= new Discord.Client();
const   format     		= require('./modules/format')
const	shortMsg		= require('./modules/shortMessage')
const	get				= require('./modules/getResponce')
const   cfg         	= config.tokenGeneral



// express();

client.login(cfg)
client.on('ready', () => {
	tmpMsg = `–ë–æ—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω —Å ${client.users.cache.size} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –Ω–∞ –∫–∞–Ω–∞–ª–∞—Ö ${client.channels.cache.size} –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö ${client.guilds.cache.size}. `;
	client.user.setActivity("–∑–∞ "+client.guilds.cache.size +" —Å–µ—Ä–≤–µ—Ä–∞–º–∏", { type: 'WATCHING' }) // –ß—Ç–æ –æ–±–æ–±—Ä–∞–∂–∞—Ç—å –≤ —Å—Ç–∞—Ç—É—Å–µ –±–æ—Ç–∞"
	shortMsg.logs(tmpMsg, "");
	client.generateInvite(["ADMINISTRATOR"]).then(link => {
		console.log(link);
	});
	// client.guilds.cache.get('710928391569670186').leave()
});
client.on('disconnect',()=>{
	tmpMsg=`–ë–æ—Ç –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω`
	shortMsg.logs(tmpMsg, "")
});
client.on('reconnecting',()=>{
	tmpMsg=`–ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω`
	shortMsg.logs(tmpMsg, "")
})
client.on('guildCreate',guild=>{
	tmpMsg=`–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ –µ—â–µ –æ–¥–∏–Ω —Å–µ—Ä–≤–µ—Ä`
	shortMsg.logs(tmpMsg, "");
	client.users.cache.get("290170884520673281").send(tmpMsg+"\n"+guild.name);
	guild.channels.cache.last().createInvite().then(invite =>client.users.cache.get("290170884520673281").send(`–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ${invite}`)).catch(console.log("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–∞–π—Ç–∞"))
	// client.guilds.cache.get('540965001314172949').leave()
	client.user.setActivity("–∑–∞ "+client.guilds.cache.size +" —Å–µ—Ä–≤–µ—Ä–∞–º–∏", { type: 'WATCHING' }) // –ß—Ç–æ –æ–±–æ–±—Ä–∞–∂–∞—Ç—å –≤ —Å—Ç–∞—Ç—É—Å–µ –±–æ—Ç–∞"

})

client.on('message', message => {
	// console.log(typeof (+message.content));
	if(format.isNum(message.content))return;
	if(message.content.length === 2)return;
	if(message.author.bot) return;
	//if(message.author.bot) return;
	if(message.attachments.size===1){message.react('üëç'); return}
	// if(message==1){console.log;return}
	if(message.content === 'ping') {message.reply('Pong!')}
	if(message.content.toUpperCase()==="reset") {
        console.log("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫")
        client.destroy().then(async () => {
            await client.login(cfg)
        })
    }

	format.russianText(message.content);

	if(msg.search("–ø—Ä–∏–≤–µ—Ç") !== -1)shortMsg.hello(message);
	if(msg.search("–ø–æ—á–µ–º—É") !== -1)shortMsg.why(message);
	if(msg.search("–≤ —Å–º—ã—Å–ª–µ") !== -1)shortMsg.meaning(message);
	if(msg.search("–±–µ–∑ –±–æ—Ç–∞") !== -1)shortMsg.handmade(message);
	if(msg.search("—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ ") !==-1)shortMsg.checkDev(message);
	if(msg.search("–∞–Ω–µ–∫–¥–æ—Ç") !==-1)shortMsg.joke(message);
	if(msg === "—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫")shortMsg.checkDev(message);
	if(msg.startsWith(config.prefix+'—Ä—É–¥–∑')){shortMsg.help(message);return}
	if(msg.startsWith('—Ä—É–¥–∑')){shortMsg.help(message);return}
	if(msg.startsWith(config.prefix+'–ø–æ–º–æ—â—å')){shortMsg.help(message);return}
	if(msg.startsWith('–ø–æ–º–æ—â—å')){shortMsg.help(message);return}
	if(msg.startsWith('!–∑–¥—Ñ–Ω')){return;}
	if(msg.startsWith('!—ã–ª—à–∑')){return;}
	if(msg.startsWith('!—ã—É—Ñ–∫—Å—Ä')){return;}
	if(msg.startsWith('!–∫—É–∑–¥—Ñ–Ω')){return;}
	if(msg.startsWith('!—ã–µ—â–∑')){return;}
	if(msg.startsWith('!–∑—Ñ–≥—ã—É')){return;}
	if(msg.startsWith('!—Å—á–µ—Ç')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith('!—Å—á—ë—Ç')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith('—Å—á–µ—Ç')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith('—Å—á—ë—Ç')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith('!–∫–æ—Ä–æ–Ω—ã')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith('–∫–æ—Ä–æ–Ω—ã')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith('!–∫–æ—Ä–æ–Ω–∫–∏')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith('–∫–æ—Ä–æ–Ω–∫–∏')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith('!–≤—Ä–µ–º—è')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith('–≤—Ä–µ–º—è')) {shortMsg.allCrow(message, msg);return;}
	if(msg.startsWith(config.prefix+"—É–¥–∞–ª–∏—Ç—å")){format.deleted(message,msg);return}
	if(msg.startsWith(config.prefix+"–∏–Ω–≤–∞–π—Ç")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith(config.prefix+"–¥–æ–±–∞–≤–∏—Ç—å")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith(config.prefix+"—Å—Å—ã–ª–∫–∞–Ω–∞–±–æ—Ç–∞")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith(config.prefix+"—Å—Å—ã–ª–∫–∞")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith(config.prefix+"–¥–æ–±–∞–≤–∏—Ç—å–±–æ—Ç–∞")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith("—É–¥–∞–ª–∏—Ç—å")){format.deleted(message,msg);return}
	if(msg.startsWith("–∏–Ω–≤–∞–π—Ç")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith("–¥–æ–±–∞–≤–∏—Ç—å")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith("—Å—Å—ã–ª–∫–∞–Ω–∞–±–æ—Ç–∞")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith("—Å—Å—ã–ª–∫–∞")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith("–¥–æ–±–∞–≤–∏—Ç—å–±–æ—Ç–∞")){shortMsg.inviteLink(client, message);return}
	if(msg.startsWith(config.prefix+"–∫–ª–∞–Ω")){format.searchValue(message, "2", "clan", false, true,"",null);return}
	if(msg.startsWith(config.prefix+"—É—á–∞—Å—Ç–Ω–∏–∫–∏")){format.searchValue(message, "2", "members", false, true,"",null);return}
	if(msg.startsWith("0")){format.searchValue(message, "0", "spec", false, true,"",null)}
	if(msg.startsWith("1")){format.searchValue(message, "1", "arh", false, true,"",null)}
	if(msg.startsWith(config.prefix)){format.searchValue(message, config.prefix, "spec", true, true,"",null);return}
	if(msg.startsWith('—Ç–µ—Å—Ç')) {
		inviteLink(client, message)
		function inviteLink(client,message) {
			client.generateInvite(["ADMINISTRATOR"]).then(link => {
				console.log("–ó–∞–ø—Ä–æ—Å —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞",link);
				message.reply(link)
			});

		}
		message.channel.send(client.guilds.cache.map(guild => guild.id+"|"+guild.name).join(", \n"));
        // console.log("client.guilds.cache.", client.guilds.cache)
		m=message.author.username;
        console.log("m", m)
        message.reply(m)
		// message.reply(m)
		// console.log("545640");
		// message.guild.channels.cache.last().createInvite()
		// 	.then(invite =>console.log(`–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ${invite}`))
		// 	.catch(console.log("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–∞–π—Ç–∞"))
        // console.log("message.guild.channels.cache.first()", message.guild.channels.cache)
		// txt = (message.attachments.size==0)?1:2
        // console.log("txt", txt)
	}

});

